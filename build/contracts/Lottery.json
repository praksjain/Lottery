{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "endLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntranceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lottery_state",
      "outputs": [
        {
          "internalType": "enum Lottery.LOTTER_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdEntryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/prakhar/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
    "1": "/Users/prakhar/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "2": "/Users/prakhar/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
    "3": "contracts/Lottery.sol"
  },
  "ast": {
    "absolutePath": "contracts/Lottery.sol",
    "exportedSymbols": {
      "Lottery": [
        129
      ]
    },
    "id": 130,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "absolutePath": "/Users/prakhar/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 286,
        "src": "57:76:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/prakhar/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 240,
        "src": "134:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 239,
              "src": "208:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$239",
                "typeString": "contract Ownable"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "208:7:3"
          }
        ],
        "contractDependencies": [
          239,
          308
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 129,
        "linearizedBaseContracts": [
          129,
          239,
          308
        ],
        "name": "Lottery",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "mutability": "mutable",
            "name": "players",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 129,
            "src": "222:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 6,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "222:15:3",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 7,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "222:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "88ab139a",
            "id": 10,
            "mutability": "mutable",
            "name": "usdEntryFee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 129,
            "src": "253:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "253:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "ethUsdPriceFeed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 129,
            "src": "285:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$285",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "contractScope": null,
              "id": 11,
              "name": "AggregatorV3Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 285,
              "src": "285:21:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$285",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "Lottery.LOTTER_STATE",
            "id": 16,
            "members": [
              {
                "id": 13,
                "name": "OPEN",
                "nodeType": "EnumValue",
                "src": "365:4:3"
              },
              {
                "id": 14,
                "name": "CLOSED",
                "nodeType": "EnumValue",
                "src": "379:6:3"
              },
              {
                "id": 15,
                "name": "CALCULATING_WINNER",
                "nodeType": "EnumValue",
                "src": "395:18:3"
              }
            ],
            "name": "LOTTER_STATE",
            "nodeType": "EnumDefinition",
            "src": "337:82:3"
          },
          {
            "constant": false,
            "functionSelector": "81447999",
            "id": 18,
            "mutability": "mutable",
            "name": "lottery_state",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 129,
            "src": "425:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_LOTTER_STATE_$16",
              "typeString": "enum Lottery.LOTTER_STATE"
            },
            "typeName": {
              "contractScope": null,
              "id": 17,
              "name": "LOTTER_STATE",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16,
              "src": "425:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_LOTTER_STATE_$16",
                "typeString": "enum Lottery.LOTTER_STATE"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "511:157:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23,
                      "name": "usdEntryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "521:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_50000000000000000000_by_1",
                        "typeString": "int_const 50000000000000000000"
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3530",
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "535:2:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 27,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 25,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "541:2:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3138",
                              "id": 26,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "545:2:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "541:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          }
                        ],
                        "id": 28,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "540:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "535:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50000000000000000000_by_1",
                        "typeString": "int_const 50000000000000000000"
                      }
                    },
                    "src": "521:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "521:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 32,
                      "name": "ethUsdPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "558:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$285",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 34,
                          "name": "_priceFeedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "598:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 33,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "576:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$285_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 35,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "576:40:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$285",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "558:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$285",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "558:58:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38,
                      "name": "lottery_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "626:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTER_STATE_$16",
                        "typeString": "enum Lottery.LOTTER_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "LOTTER_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "642:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTER_STATE_$16_$",
                          "typeString": "type(enum Lottery.LOTTER_STATE)"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "642:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTER_STATE_$16",
                        "typeString": "enum Lottery.LOTTER_STATE"
                      }
                    },
                    "src": "626:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTER_STATE_$16",
                      "typeString": "enum Lottery.LOTTER_STATE"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "626:35:3"
                }
              ]
            },
            "documentation": null,
            "id": 44,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_priceFeedAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 44,
                  "src": "477:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "476:27:3"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "511:0:3"
            },
            "scope": 129,
            "src": "465:203:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "706:184:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTER_STATE_$16",
                          "typeString": "enum Lottery.LOTTER_STATE"
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 48,
                          "name": "lottery_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "747:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTER_STATE_$16",
                            "typeString": "enum Lottery.LOTTER_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 49,
                            "name": "LOTTER_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "764:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTER_STATE_$16_$",
                              "typeString": "type(enum Lottery.LOTTER_STATE)"
                            }
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "764:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTER_STATE_$16",
                            "typeString": "enum Lottery.LOTTER_STATE"
                          }
                        },
                        "src": "747:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 47,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "739:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "739:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "739:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 55,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "800:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "800:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 57,
                            "name": "getEntranceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "813:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "813:16:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "800:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682045544821",
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "831:17:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de",
                          "typeString": "literal_string \"Not enough ETH!\""
                        },
                        "value": "Not enough ETH!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de",
                          "typeString": "literal_string \"Not enough ETH!\""
                        }
                      ],
                      "id": 54,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "792:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "792:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "792:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 66,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "872:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "872:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "859:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "859:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "859:24:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "859:24:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e97dcb62",
            "id": 71,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "688:2:3"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "706:0:3"
            },
            "scope": 129,
            "src": "674:216:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "952:270:3",
              "statements": [
                {
                  "assignments": [
                    null,
                    77,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 77,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 106,
                      "src": "990:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 76,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "990:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 81,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 78,
                        "name": "ethUsdPriceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1012:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$285",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 284,
                      "src": "1012:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1012:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "987:58:3"
                },
                {
                  "assignments": [
                    83
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83,
                      "mutability": "mutable",
                      "name": "adjustedPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 106,
                      "src": "1055:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 82,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1055:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 92,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 86,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "1087:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1079:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 84,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1079:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1079:14:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      },
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1096:2:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1100:2:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "1096:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      }
                    },
                    "src": "1079:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1055:47:3"
                },
                {
                  "assignments": [
                    94
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 94,
                      "mutability": "mutable",
                      "name": "costToEnter",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 106,
                      "src": "1127:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 93,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1127:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 103,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 95,
                            "name": "usdEntryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1150:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1164:2:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3138",
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1168:2:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "1164:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "1150:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 100,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1149:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 101,
                      "name": "adjustedPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1174:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1149:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1127:60:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 104,
                    "name": "costToEnter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 94,
                    "src": "1204:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 75,
                  "id": 105,
                  "nodeType": "Return",
                  "src": "1197:18:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "09bc33a7",
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntranceFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "919:2:3"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 107,
                  "src": "943:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "942:9:3"
            },
            "scope": 129,
            "src": "896:326:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "1259:171:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTER_STATE_$16",
                          "typeString": "enum Lottery.LOTTER_STATE"
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 111,
                          "name": "lottery_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1290:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTER_STATE_$16",
                            "typeString": "enum Lottery.LOTTER_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 112,
                            "name": "LOTTER_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "1307:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTER_STATE_$16_$",
                              "typeString": "type(enum Lottery.LOTTER_STATE)"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1307:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTER_STATE_$16",
                            "typeString": "enum Lottery.LOTTER_STATE"
                          }
                        },
                        "src": "1290:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e27742073746172742061206e6577206c6f7474657220796574",
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1340:30:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40e118fab8e6dc8b430977e4621c969359757d40510d0a1fadcfe58cac45ae7f",
                          "typeString": "literal_string \"Can't start a new lotter yet\""
                        },
                        "value": "Can't start a new lotter yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40e118fab8e6dc8b430977e4621c969359757d40510d0a1fadcfe58cac45ae7f",
                          "typeString": "literal_string \"Can't start a new lotter yet\""
                        }
                      ],
                      "id": 110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1269:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1269:111:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1269:111:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 118,
                      "name": "lottery_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1390:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTER_STATE_$16",
                        "typeString": "enum Lottery.LOTTER_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "LOTTER_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1406:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTER_STATE_$16_$",
                          "typeString": "type(enum Lottery.LOTTER_STATE)"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1406:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTER_STATE_$16",
                        "typeString": "enum Lottery.LOTTER_STATE"
                      }
                    },
                    "src": "1390:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTER_STATE_$16",
                      "typeString": "enum Lottery.LOTTER_STATE"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:33:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "160344e2",
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startLottery",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1249:2:3"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1259:0:3"
            },
            "scope": 129,
            "src": "1228:202:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1465:2:3",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "1593a8c7",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "endLottery",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1455:2:3"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1465:0:3"
            },
            "scope": 129,
            "src": "1436:31:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 130,
        "src": "188:1281:3"
      }
    ],
    "src": "32:1438:3"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516106c23803806106c28339818101604052602081101561003357600080fd5b5051600061003f6100ce565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506802b5e3af16b1880000600255600380546001600160a01b0319166001600160a01b038316178082556001919060ff60a01b1916600160a01b830217905550506100d2565b3390565b6105e1806100e16000396000f3fe6080604052600436106100865760003560e01c8063814479991161005957806381447999146100f357806388ab139a146101295780638da5cb5b1461013e578063e97dcb621461016f578063f2fde38b1461017757610086565b806309bc33a71461008b5780631593a8c7146100b2578063160344e2146100c9578063715018a6146100de575b600080fd5b34801561009757600080fd5b506100a06101aa565b60408051918252519081900360200190f35b3480156100be57600080fd5b506100c7610258565b005b3480156100d557600080fd5b506100c761025a565b3480156100ea57600080fd5b506100c76102d5565b3480156100ff57600080fd5b50610108610393565b6040518082600281111561011857fe5b815260200191505060405180910390f35b34801561013557600080fd5b506100a06103a3565b34801561014a57600080fd5b506101536103a9565b604080516001600160a01b039092168252519081900360200190f35b6100c76103b8565b34801561018357600080fd5b506100c76004803603602081101561019a57600080fd5b50356001600160a01b031661046d565b600080600360009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156101fb57600080fd5b505afa15801561020f573d6000803e3d6000fd5b505050506040513d60a081101561022557600080fd5b50602001516002549091506402540be4008202906000908290670de0b6b3a7640000028161024f57fe5b04935050505090565b565b6001600354600160a01b900460ff16600281111561027457fe5b146102c6576040805162461bcd60e51b815260206004820152601c60248201527f43616e27742073746172742061206e6577206c6f747465722079657400000000604482015290519081900360640190fd5b6003805460ff60a01b19169055565b6102dd610581565b6001600160a01b03166102ee6103a9565b6001600160a01b031614610349576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600354600160a01b900460ff1681565b60025481565b6000546001600160a01b031690565b6000600354600160a01b900460ff1660028111156103d257fe5b146103dc57600080fd5b6103e46101aa565b34101561042a576040805162461bcd60e51b815260206004820152600f60248201526e4e6f7420656e6f756768204554482160881b604482015290519081900360640190fd5b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191633179055565b610475610581565b6001600160a01b03166104866103a9565b6001600160a01b0316146104e1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166105265760405162461bcd60e51b81526004018080602001828103825260268152602001806105866026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122050b785ab83a60d10fd2a5e2259cdb17e8f9c6ce5baf15e615ef5a402eac5167b64736f6c634300060c0033",
  "bytecodeSha1": "ebf6c71c1f9cf77916b530f3629e8ba1b38de8f0",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "Lottery",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "15": [
            1297,
            1320,
            true
          ],
          "16": [
            2099,
            2121,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "Lottery.enter": {
          "13": [
            747,
            781,
            true
          ],
          "14": [
            800,
            829,
            true
          ]
        },
        "Lottery.startLottery": {
          "12": [
            1290,
            1326,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable.owner": {
          "4": [
            1150,
            1163
          ]
        },
        "Ownable.renounceOwnership": {
          "2": [
            1781,
            1826
          ],
          "3": [
            1836,
            1855
          ]
        },
        "Ownable.transferOwnership": {
          "8": [
            2091,
            2164
          ],
          "9": [
            2174,
            2217
          ],
          "10": [
            2227,
            2244
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "11": [
            678,
            695
          ]
        }
      },
      "2": {},
      "3": {
        "Lottery.enter": {
          "5": [
            739,
            782
          ],
          "6": [
            792,
            849
          ],
          "7": [
            859,
            883
          ]
        },
        "Lottery.startLottery": {
          "0": [
            1269,
            1380
          ],
          "1": [
            1390,
            1423
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Ownable"
  ],
  "deployedBytecode": "6080604052600436106100865760003560e01c8063814479991161005957806381447999146100f357806388ab139a146101295780638da5cb5b1461013e578063e97dcb621461016f578063f2fde38b1461017757610086565b806309bc33a71461008b5780631593a8c7146100b2578063160344e2146100c9578063715018a6146100de575b600080fd5b34801561009757600080fd5b506100a06101aa565b60408051918252519081900360200190f35b3480156100be57600080fd5b506100c7610258565b005b3480156100d557600080fd5b506100c761025a565b3480156100ea57600080fd5b506100c76102d5565b3480156100ff57600080fd5b50610108610393565b6040518082600281111561011857fe5b815260200191505060405180910390f35b34801561013557600080fd5b506100a06103a3565b34801561014a57600080fd5b506101536103a9565b604080516001600160a01b039092168252519081900360200190f35b6100c76103b8565b34801561018357600080fd5b506100c76004803603602081101561019a57600080fd5b50356001600160a01b031661046d565b600080600360009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156101fb57600080fd5b505afa15801561020f573d6000803e3d6000fd5b505050506040513d60a081101561022557600080fd5b50602001516002549091506402540be4008202906000908290670de0b6b3a7640000028161024f57fe5b04935050505090565b565b6001600354600160a01b900460ff16600281111561027457fe5b146102c6576040805162461bcd60e51b815260206004820152601c60248201527f43616e27742073746172742061206e6577206c6f747465722079657400000000604482015290519081900360640190fd5b6003805460ff60a01b19169055565b6102dd610581565b6001600160a01b03166102ee6103a9565b6001600160a01b031614610349576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600354600160a01b900460ff1681565b60025481565b6000546001600160a01b031690565b6000600354600160a01b900460ff1660028111156103d257fe5b146103dc57600080fd5b6103e46101aa565b34101561042a576040805162461bcd60e51b815260206004820152600f60248201526e4e6f7420656e6f756768204554482160881b604482015290519081900360640190fd5b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191633179055565b610475610581565b6001600160a01b03166104866103a9565b6001600160a01b0316146104e1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166105265760405162461bcd60e51b81526004018080602001828103825260268152602001806105866026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122050b785ab83a60d10fd2a5e2259cdb17e8f9c6ce5baf15e615ef5a402eac5167b64736f6c634300060c0033",
  "deployedSourceMap": "188:1281:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;896:326;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1436:31;;;;;;;;;;;;;:::i;:::-;;1228:202;;;;;;;;;;;;;:::i;1717:145:0:-;;;;;;;;;;;;;:::i;425:33:3:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;253:26;;;;;;;;;;;;;:::i;1085:85:0:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1085:85:0;;;;;;;;;;;;;;674:216:3;;;:::i;2011:240:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2011:240:0;-1:-1:-1;;;;;2011:240:0;;:::i;896:326:3:-;943:7;990:12;1012:15;;;;;;;;;-1:-1:-1;;;;;1012:15:3;-1:-1:-1;;;;;1012:31:3;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1012:33:3;;;1150:11;;1012:33;;-1:-1:-1;1096:6:3;1079:23;;;1055:21;;1079:23;;1164:6;1150:20;1079:23;1149:38;;;;;;-1:-1:-1;;;;896:326:3;:::o;1436:31::-;:::o;1228:202::-;1307:19;1290:13;;-1:-1:-1;;;1290:13:3;;;;:36;;;;;;;;;1269:111;;;;;-1:-1:-1;;;1269:111:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:13;:33;;-1:-1:-1;;;;1390:33:3;;;1228:202::o;1717:145:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1807:6:::0;;1786:40:::1;::::0;-1:-1:-1;;;;;1807:6:0;;::::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1853:1;1836:19:::0;;-1:-1:-1;;;;;;1836:19:0::1;::::0;;1717:145::o;425:33:3:-;;;-1:-1:-1;;;425:33:3;;;;;:::o;253:26::-;;;;:::o;1085:85:0:-;1131:7;1157:6;-1:-1:-1;;;;;1157:6:0;1085:85;:::o;674:216:3:-;764:17;747:13;;-1:-1:-1;;;747:13:3;;;;:34;;;;;;;;;739:43;;;;;;813:16;:14;:16::i;:::-;800:9;:29;;792:57;;;;;-1:-1:-1;;;792:57:3;;;;;;;;;;;;-1:-1:-1;;;792:57:3;;;;;;;;;;;;;;;859:7;:24;;;;;;;-1:-1:-1;859:24:3;;;;;;;;-1:-1:-1;;;;;;859:24:3;872:10;859:24;;;674:216::o;2011:240:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:0;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:0;;::::1;::::0;2200:6;::::1;::::0;2179:38:::1;::::0;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:0::1;-1:-1:-1::0;;;;;2227:17:0;;;::::1;::::0;;;::::1;::::0;;2011:240::o;598:104:1:-;685:10;598:104;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    188,
    1469
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81447999 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x81447999 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x88AB139A EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xE97DCB62 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x177 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x1593A8C7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x160344E2 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0x258 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0x25A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0x2D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x118 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x3A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x153 PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC7 PUSH2 0x3B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x46D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH5 0x2540BE400 DUP3 MUL SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH8 0xDE0B6B3A7640000 MUL DUP2 PUSH2 0x24F JUMPI INVALID JUMPDEST DIV SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x274 JUMPI INVALID JUMPDEST EQ PUSH2 0x2C6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E27742073746172742061206E6577206C6F747465722079657400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2DD PUSH2 0x581 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2EE PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x349 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3D2 JUMPI INVALID JUMPDEST EQ PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E4 PUSH2 0x1AA JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x42A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F7420656E6F7567682045544821 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x475 PUSH2 0x581 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x486 PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x526 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x586 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A264697066735822122050B785AB83A6 0xD LT REVERT 0x2A 0x5E 0x22 MSIZE 0xCD 0xB1 PUSH31 0x8F9C6CE5BAF15E615EF5A402EAC5167B64736F6C634300060C003300000000 ",
  "pcMap": {
    "0": {
      "offset": [
        188,
        1469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x86"
    },
    "12": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x81447999"
    },
    "25": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "GT",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59"
    },
    "29": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x81447999"
    },
    "36": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "EQ",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3"
    },
    "40": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x88AB139A"
    },
    "47": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "EQ",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x129"
    },
    "51": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "58": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E"
    },
    "62": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE97DCB62"
    },
    "69": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16F"
    },
    "73": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "DUP1",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "EQ",
      "path": "3"
    },
    "81": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x177"
    },
    "84": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "85": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x86"
    },
    "88": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "JUMP",
      "path": "3"
    },
    "89": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "90": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "DUP1",
      "path": "3"
    },
    "91": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9BC33A7"
    },
    "96": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "EQ",
      "path": "3"
    },
    "97": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8B"
    },
    "100": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "DUP1",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1593A8C7"
    },
    "107": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "EQ",
      "path": "3"
    },
    "108": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB2"
    },
    "111": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "DUP1",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x160344E2"
    },
    "118": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "EQ",
      "path": "3"
    },
    "119": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC9"
    },
    "122": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "DUP1",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x715018A6"
    },
    "129": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "EQ",
      "path": "3"
    },
    "130": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDE"
    },
    "133": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "134": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "135": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "137": {
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "DUP1",
      "path": "3"
    },
    "138": {
      "first_revert": true,
      "fn": null,
      "offset": [
        188,
        1469
      ],
      "op": "REVERT",
      "path": "3"
    },
    "139": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "140": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "141": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "DUP1",
      "path": "3"
    },
    "142": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "143": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x97"
    },
    "146": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "147": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "149": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "DUP1",
      "path": "3"
    },
    "150": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "REVERT",
      "path": "3"
    },
    "151": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "152": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "POP",
      "path": "3"
    },
    "153": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA0"
    },
    "156": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AA"
    },
    "159": {
      "fn": "Lottery.getEntranceFee",
      "jump": "i",
      "offset": [
        896,
        1222
      ],
      "op": "JUMP",
      "path": "3"
    },
    "160": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "161": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "163": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "DUP1",
      "path": "3"
    },
    "164": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "165": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "166": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "DUP3",
      "path": "3"
    },
    "167": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "168": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "169": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "170": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "DUP2",
      "path": "3"
    },
    "171": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "172": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "SUB",
      "path": "3"
    },
    "173": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "175": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "ADD",
      "path": "3"
    },
    "176": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "177": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "RETURN",
      "path": "3"
    },
    "178": {
      "fn": "Lottery.endLottery",
      "offset": [
        1436,
        1467
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "179": {
      "fn": "Lottery.endLottery",
      "offset": [
        1436,
        1467
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "180": {
      "fn": "Lottery.endLottery",
      "offset": [
        1436,
        1467
      ],
      "op": "DUP1",
      "path": "3"
    },
    "181": {
      "fn": "Lottery.endLottery",
      "offset": [
        1436,
        1467
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "182": {
      "fn": "Lottery.endLottery",
      "offset": [
        1436,
        1467
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBE"
    },
    "185": {
      "fn": "Lottery.endLottery",
      "offset": [
        1436,
        1467
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "186": {
      "fn": "Lottery.endLottery",
      "offset": [
        1436,
        1467
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "188": {
      "fn": "Lottery.endLottery",
      "offset": [
        1436,
        1467
      ],
      "op": "DUP1",
      "path": "3"
    },
    "189": {
      "fn": "Lottery.endLottery",
      "offset": [
        1436,
        1467
      ],
      "op": "REVERT",
      "path": "3"
    },
    "190": {
      "fn": "Lottery.endLottery",
      "offset": [
        1436,
        1467
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "191": {
      "fn": "Lottery.endLottery",
      "offset": [
        1436,
        1467
      ],
      "op": "POP",
      "path": "3"
    },
    "192": {
      "fn": "Lottery.endLottery",
      "offset": [
        1436,
        1467
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC7"
    },
    "195": {
      "fn": "Lottery.endLottery",
      "offset": [
        1436,
        1467
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x258"
    },
    "198": {
      "fn": "Lottery.endLottery",
      "jump": "i",
      "offset": [
        1436,
        1467
      ],
      "op": "JUMP",
      "path": "3"
    },
    "199": {
      "fn": "Lottery.endLottery",
      "offset": [
        1436,
        1467
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "200": {
      "fn": "Lottery.endLottery",
      "offset": [
        1436,
        1467
      ],
      "op": "STOP",
      "path": "3"
    },
    "201": {
      "fn": "Lottery.startLottery",
      "offset": [
        1228,
        1430
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "202": {
      "fn": "Lottery.startLottery",
      "offset": [
        1228,
        1430
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "203": {
      "fn": "Lottery.startLottery",
      "offset": [
        1228,
        1430
      ],
      "op": "DUP1",
      "path": "3"
    },
    "204": {
      "fn": "Lottery.startLottery",
      "offset": [
        1228,
        1430
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "205": {
      "fn": "Lottery.startLottery",
      "offset": [
        1228,
        1430
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5"
    },
    "208": {
      "fn": "Lottery.startLottery",
      "offset": [
        1228,
        1430
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "209": {
      "fn": "Lottery.startLottery",
      "offset": [
        1228,
        1430
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "211": {
      "fn": "Lottery.startLottery",
      "offset": [
        1228,
        1430
      ],
      "op": "DUP1",
      "path": "3"
    },
    "212": {
      "fn": "Lottery.startLottery",
      "offset": [
        1228,
        1430
      ],
      "op": "REVERT",
      "path": "3"
    },
    "213": {
      "fn": "Lottery.startLottery",
      "offset": [
        1228,
        1430
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "214": {
      "fn": "Lottery.startLottery",
      "offset": [
        1228,
        1430
      ],
      "op": "POP",
      "path": "3"
    },
    "215": {
      "fn": "Lottery.startLottery",
      "offset": [
        1228,
        1430
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC7"
    },
    "218": {
      "fn": "Lottery.startLottery",
      "offset": [
        1228,
        1430
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25A"
    },
    "221": {
      "fn": "Lottery.startLottery",
      "jump": "i",
      "offset": [
        1228,
        1430
      ],
      "op": "JUMP",
      "path": "3"
    },
    "222": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "223": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "224": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "225": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "226": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "229": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "230": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "232": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "233": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "REVERT",
      "path": "0"
    },
    "234": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "235": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "POP",
      "path": "0"
    },
    "236": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7"
    },
    "239": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "242": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMP",
      "path": "0"
    },
    "243": {
      "offset": [
        425,
        458
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "244": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "245": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "DUP1",
      "path": "3"
    },
    "246": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "247": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFF"
    },
    "250": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "251": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "253": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "DUP1",
      "path": "3"
    },
    "254": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "REVERT",
      "path": "3"
    },
    "255": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "256": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "POP",
      "path": "3"
    },
    "257": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x108"
    },
    "260": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x393"
    },
    "263": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        425,
        458
      ],
      "op": "JUMP",
      "path": "3"
    },
    "264": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "265": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "267": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "268": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "DUP1",
      "path": "3"
    },
    "269": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "DUP3",
      "path": "3"
    },
    "270": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "272": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "DUP2",
      "path": "3"
    },
    "273": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "GT",
      "path": "3"
    },
    "274": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "275": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x118"
    },
    "278": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "279": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "INVALID",
      "path": "3"
    },
    "280": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "281": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "DUP2",
      "path": "3"
    },
    "282": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "283": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "285": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "ADD",
      "path": "3"
    },
    "286": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "287": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "POP",
      "path": "3"
    },
    "288": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "POP",
      "path": "3"
    },
    "289": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "291": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "292": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "DUP1",
      "path": "3"
    },
    "293": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "294": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "SUB",
      "path": "3"
    },
    "295": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "296": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "RETURN",
      "path": "3"
    },
    "297": {
      "offset": [
        253,
        279
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "298": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        253,
        279
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "299": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        253,
        279
      ],
      "op": "DUP1",
      "path": "3"
    },
    "300": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        253,
        279
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "301": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        253,
        279
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x135"
    },
    "304": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        253,
        279
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "305": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        253,
        279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "307": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        253,
        279
      ],
      "op": "DUP1",
      "path": "3"
    },
    "308": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        253,
        279
      ],
      "op": "REVERT",
      "path": "3"
    },
    "309": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        253,
        279
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "310": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        253,
        279
      ],
      "op": "POP",
      "path": "3"
    },
    "311": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        253,
        279
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA0"
    },
    "314": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        253,
        279
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A3"
    },
    "317": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        253,
        279
      ],
      "op": "JUMP",
      "path": "3"
    },
    "318": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "319": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "320": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "321": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "322": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A"
    },
    "325": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "326": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "328": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "329": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "REVERT",
      "path": "0"
    },
    "330": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "331": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "POP",
      "path": "0"
    },
    "332": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x153"
    },
    "335": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A9"
    },
    "338": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMP",
      "path": "0"
    },
    "339": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "340": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "342": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "343": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "350": {
      "op": "SHL"
    },
    "351": {
      "op": "SUB"
    },
    "352": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "353": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "354": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "AND",
      "path": "0"
    },
    "355": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP3",
      "path": "0"
    },
    "356": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "357": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "358": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "359": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP2",
      "path": "0"
    },
    "360": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "361": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SUB",
      "path": "0"
    },
    "362": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "364": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "ADD",
      "path": "0"
    },
    "365": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "366": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "RETURN",
      "path": "0"
    },
    "367": {
      "fn": "Lottery.enter",
      "offset": [
        674,
        890
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "368": {
      "fn": "Lottery.enter",
      "offset": [
        674,
        890
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC7"
    },
    "371": {
      "fn": "Lottery.enter",
      "offset": [
        674,
        890
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B8"
    },
    "374": {
      "fn": "Lottery.enter",
      "jump": "i",
      "offset": [
        674,
        890
      ],
      "op": "JUMP",
      "path": "3"
    },
    "375": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "376": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "377": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "378": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "379": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "382": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "383": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "385": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "386": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "REVERT",
      "path": "0"
    },
    "387": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "388": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "POP",
      "path": "0"
    },
    "389": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7"
    },
    "392": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "394": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "395": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "396": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "SUB",
      "path": "0"
    },
    "397": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "399": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "400": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "LT",
      "path": "0"
    },
    "401": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "402": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19A"
    },
    "405": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "406": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "408": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "409": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "REVERT",
      "path": "0"
    },
    "410": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "411": {
      "op": "POP"
    },
    "412": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "419": {
      "op": "SHL"
    },
    "420": {
      "op": "SUB"
    },
    "421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "AND",
      "path": "0"
    },
    "422": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46D"
    },
    "425": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "426": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "427": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        943,
        950
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "429": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        990,
        1002
      ],
      "op": "DUP1",
      "path": "3"
    },
    "430": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1027
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "432": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1027
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "434": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1027
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "435": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1027
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "436": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1027
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "437": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1027
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "440": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1027
      ],
      "op": "EXP",
      "path": "3"
    },
    "441": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1027
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "442": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1027
      ],
      "op": "DIV",
      "path": "3"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "449": {
      "op": "SHL"
    },
    "450": {
      "op": "SUB"
    },
    "451": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1027
      ],
      "op": "AND",
      "path": "3"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "458": {
      "op": "SHL"
    },
    "459": {
      "op": "SUB"
    },
    "460": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1043
      ],
      "op": "AND",
      "path": "3"
    },
    "461": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1043
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFEAF968C"
    },
    "466": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "468": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "469": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "DUP2",
      "path": "3"
    },
    "470": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "475": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "AND",
      "path": "3"
    },
    "476": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "478": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "SHL",
      "path": "3"
    },
    "479": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "DUP2",
      "path": "3"
    },
    "480": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "481": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "483": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "ADD",
      "path": "3"
    },
    "484": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "486": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "488": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "489": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "DUP1",
      "path": "3"
    },
    "490": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "DUP4",
      "path": "3"
    },
    "491": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "SUB",
      "path": "3"
    },
    "492": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "DUP2",
      "path": "3"
    },
    "493": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "DUP7",
      "path": "3"
    },
    "494": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "DUP1",
      "path": "3"
    },
    "495": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "496": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "497": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "DUP1",
      "path": "3"
    },
    "498": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "499": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FB"
    },
    "502": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "503": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "505": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "DUP1",
      "path": "3"
    },
    "506": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "REVERT",
      "path": "3"
    },
    "507": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "508": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "POP",
      "path": "3"
    },
    "509": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "GAS",
      "path": "3"
    },
    "510": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "511": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "512": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "DUP1",
      "path": "3"
    },
    "513": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "514": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20F"
    },
    "517": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "518": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "519": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "521": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "DUP1",
      "path": "3"
    },
    "522": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "523": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "524": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "526": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "REVERT",
      "path": "3"
    },
    "527": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "528": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "POP",
      "path": "3"
    },
    "529": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "POP",
      "path": "3"
    },
    "530": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "POP",
      "path": "3"
    },
    "531": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "POP",
      "path": "3"
    },
    "532": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "534": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "535": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "536": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "538": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "DUP2",
      "path": "3"
    },
    "539": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "LT",
      "path": "3"
    },
    "540": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "541": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x225"
    },
    "544": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "545": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "547": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "DUP1",
      "path": "3"
    },
    "548": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "REVERT",
      "path": "3"
    },
    "549": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "550": {
      "op": "POP"
    },
    "551": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "553": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "ADD",
      "path": "3"
    },
    "554": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "555": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1150,
        1161
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "557": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1150,
        1161
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "558": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "559": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1012,
        1045
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "560": {
      "op": "POP"
    },
    "561": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1096,
        1102
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x2540BE400"
    },
    "567": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1079,
        1102
      ],
      "op": "DUP3",
      "path": "3"
    },
    "568": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1079,
        1102
      ],
      "op": "MUL",
      "path": "3"
    },
    "569": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1079,
        1102
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "570": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1055,
        1076
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "572": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1055,
        1076
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "573": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1079,
        1102
      ],
      "op": "DUP3",
      "path": "3"
    },
    "574": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1079,
        1102
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "575": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1164,
        1170
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xDE0B6B3A7640000"
    },
    "584": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1150,
        1170
      ],
      "op": "MUL",
      "path": "3"
    },
    "585": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1079,
        1102
      ],
      "op": "DUP2",
      "path": "3"
    },
    "586": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1149,
        1187
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24F"
    },
    "589": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1149,
        1187
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "590": {
      "dev": "Division by zero",
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1149,
        1187
      ],
      "op": "INVALID",
      "path": "3"
    },
    "591": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1149,
        1187
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "592": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1149,
        1187
      ],
      "op": "DIV",
      "path": "3"
    },
    "593": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        1149,
        1187
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "594": {
      "op": "POP"
    },
    "595": {
      "op": "POP"
    },
    "596": {
      "op": "POP"
    },
    "597": {
      "op": "POP"
    },
    "598": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        896,
        1222
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "599": {
      "fn": "Lottery.getEntranceFee",
      "jump": "o",
      "offset": [
        896,
        1222
      ],
      "op": "JUMP",
      "path": "3"
    },
    "600": {
      "fn": "Lottery.endLottery",
      "offset": [
        1436,
        1467
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "601": {
      "fn": "Lottery.endLottery",
      "jump": "o",
      "offset": [
        1436,
        1467
      ],
      "op": "JUMP",
      "path": "3"
    },
    "602": {
      "fn": "Lottery.startLottery",
      "offset": [
        1228,
        1430
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "603": {
      "fn": "Lottery.startLottery",
      "offset": [
        1307,
        1326
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x1"
    },
    "605": {
      "fn": "Lottery.startLottery",
      "offset": [
        1290,
        1303
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "607": {
      "fn": "Lottery.startLottery",
      "offset": [
        1290,
        1303
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "612": {
      "op": "SHL"
    },
    "613": {
      "fn": "Lottery.startLottery",
      "offset": [
        1290,
        1303
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "614": {
      "fn": "Lottery.startLottery",
      "offset": [
        1290,
        1303
      ],
      "op": "DIV",
      "path": "3"
    },
    "615": {
      "fn": "Lottery.startLottery",
      "offset": [
        1290,
        1303
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "617": {
      "fn": "Lottery.startLottery",
      "offset": [
        1290,
        1303
      ],
      "op": "AND",
      "path": "3"
    },
    "618": {
      "fn": "Lottery.startLottery",
      "offset": [
        1290,
        1326
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "620": {
      "fn": "Lottery.startLottery",
      "offset": [
        1290,
        1326
      ],
      "op": "DUP2",
      "path": "3"
    },
    "621": {
      "fn": "Lottery.startLottery",
      "offset": [
        1290,
        1326
      ],
      "op": "GT",
      "path": "3"
    },
    "622": {
      "fn": "Lottery.startLottery",
      "offset": [
        1290,
        1326
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "623": {
      "fn": "Lottery.startLottery",
      "offset": [
        1290,
        1326
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x274"
    },
    "626": {
      "fn": "Lottery.startLottery",
      "offset": [
        1290,
        1326
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "627": {
      "fn": "Lottery.startLottery",
      "offset": [
        1290,
        1326
      ],
      "op": "INVALID",
      "path": "3"
    },
    "628": {
      "fn": "Lottery.startLottery",
      "offset": [
        1290,
        1326
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "629": {
      "branch": 12,
      "fn": "Lottery.startLottery",
      "offset": [
        1290,
        1326
      ],
      "op": "EQ",
      "path": "3"
    },
    "630": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C6"
    },
    "633": {
      "branch": 12,
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "634": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "636": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "DUP1",
      "path": "3"
    },
    "637": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "638": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "642": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "644": {
      "op": "SHL"
    },
    "645": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "DUP2",
      "path": "3"
    },
    "646": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "647": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "649": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "651": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "DUP3",
      "path": "3"
    },
    "652": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "ADD",
      "path": "3"
    },
    "653": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "654": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1C"
    },
    "656": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "658": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "DUP3",
      "path": "3"
    },
    "659": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "ADD",
      "path": "3"
    },
    "660": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "661": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x43616E27742073746172742061206E6577206C6F747465722079657400000000"
    },
    "694": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "696": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "DUP3",
      "path": "3"
    },
    "697": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "ADD",
      "path": "3"
    },
    "698": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "699": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "700": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "701": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "702": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "DUP2",
      "path": "3"
    },
    "703": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "704": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "SUB",
      "path": "3"
    },
    "705": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "707": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "ADD",
      "path": "3"
    },
    "708": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "709": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "REVERT",
      "path": "3"
    },
    "710": {
      "fn": "Lottery.startLottery",
      "offset": [
        1269,
        1380
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "711": {
      "fn": "Lottery.startLottery",
      "offset": [
        1390,
        1403
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x3"
    },
    "713": {
      "fn": "Lottery.startLottery",
      "offset": [
        1390,
        1423
      ],
      "op": "DUP1",
      "path": "3"
    },
    "714": {
      "fn": "Lottery.startLottery",
      "offset": [
        1390,
        1423
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "715": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "719": {
      "op": "SHL"
    },
    "720": {
      "op": "NOT"
    },
    "721": {
      "fn": "Lottery.startLottery",
      "offset": [
        1390,
        1423
      ],
      "op": "AND",
      "path": "3"
    },
    "722": {
      "fn": "Lottery.startLottery",
      "offset": [
        1390,
        1423
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "723": {
      "fn": "Lottery.startLottery",
      "offset": [
        1390,
        1423
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "724": {
      "fn": "Lottery.startLottery",
      "jump": "o",
      "offset": [
        1228,
        1430
      ],
      "op": "JUMP",
      "path": "3"
    },
    "725": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "726": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DD"
    },
    "729": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x581"
    },
    "732": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "733": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "740": {
      "op": "SHL"
    },
    "741": {
      "op": "SUB"
    },
    "742": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "743": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EE"
    },
    "746": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A9"
    },
    "749": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "0"
    },
    "750": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "757": {
      "op": "SHL"
    },
    "758": {
      "op": "SUB"
    },
    "759": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "760": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "0"
    },
    "761": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x349"
    },
    "764": {
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "765": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "767": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "768": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "769": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "773": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "775": {
      "op": "SHL"
    },
    "776": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "777": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "778": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "780": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "782": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "783": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "784": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "785": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "786": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "787": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "789": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "790": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "791": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "792": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "825": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "827": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "828": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "829": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "830": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "831": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "832": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "833": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "834": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "835": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SUB",
      "path": "0"
    },
    "836": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "838": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "839": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "840": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "REVERT",
      "path": "0"
    },
    "841": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "842": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x0"
    },
    "844": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "DUP1",
      "path": "0"
    },
    "845": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "846": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "848": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "855": {
      "op": "SHL"
    },
    "856": {
      "op": "SUB"
    },
    "857": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "858": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "859": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "AND",
      "path": "0"
    },
    "860": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "861": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "894": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "895": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "DUP4",
      "path": "0"
    },
    "896": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "897": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "LOG3",
      "path": "0"
    },
    "898": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1853,
        1854
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x0"
    },
    "900": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "DUP1",
      "path": "0"
    },
    "901": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "908": {
      "op": "SHL"
    },
    "909": {
      "op": "SUB"
    },
    "910": {
      "op": "NOT"
    },
    "911": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "AND",
      "path": "0"
    },
    "912": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "913": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "914": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMP",
      "path": "0"
    },
    "915": {
      "offset": [
        425,
        458
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "916": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "918": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "923": {
      "op": "SHL"
    },
    "924": {
      "offset": [
        425,
        458
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "925": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "DIV",
      "path": "3"
    },
    "926": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "928": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "AND",
      "path": "3"
    },
    "929": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        425,
        458
      ],
      "op": "DUP2",
      "path": "3"
    },
    "930": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        425,
        458
      ],
      "op": "JUMP",
      "path": "3"
    },
    "931": {
      "offset": [
        253,
        279
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "932": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        253,
        279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "934": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        253,
        279
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "935": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        253,
        279
      ],
      "op": "DUP2",
      "path": "3"
    },
    "936": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        253,
        279
      ],
      "op": "JUMP",
      "path": "3"
    },
    "937": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "938": {
      "fn": "Ownable.owner",
      "offset": [
        1131,
        1138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "940": {
      "fn": "Ownable.owner",
      "offset": [
        1157,
        1163
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 4
    },
    "941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "947": {
      "op": "SHL"
    },
    "948": {
      "op": "SUB"
    },
    "949": {
      "fn": "Ownable.owner",
      "offset": [
        1157,
        1163
      ],
      "op": "AND",
      "path": "0"
    },
    "950": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "951": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMP",
      "path": "0"
    },
    "952": {
      "fn": "Lottery.enter",
      "offset": [
        674,
        890
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "953": {
      "fn": "Lottery.enter",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x0"
    },
    "955": {
      "fn": "Lottery.enter",
      "offset": [
        747,
        760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "957": {
      "fn": "Lottery.enter",
      "offset": [
        747,
        760
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "962": {
      "op": "SHL"
    },
    "963": {
      "fn": "Lottery.enter",
      "offset": [
        747,
        760
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "964": {
      "fn": "Lottery.enter",
      "offset": [
        747,
        760
      ],
      "op": "DIV",
      "path": "3"
    },
    "965": {
      "fn": "Lottery.enter",
      "offset": [
        747,
        760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "967": {
      "fn": "Lottery.enter",
      "offset": [
        747,
        760
      ],
      "op": "AND",
      "path": "3"
    },
    "968": {
      "fn": "Lottery.enter",
      "offset": [
        747,
        781
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "970": {
      "fn": "Lottery.enter",
      "offset": [
        747,
        781
      ],
      "op": "DUP2",
      "path": "3"
    },
    "971": {
      "fn": "Lottery.enter",
      "offset": [
        747,
        781
      ],
      "op": "GT",
      "path": "3"
    },
    "972": {
      "fn": "Lottery.enter",
      "offset": [
        747,
        781
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "973": {
      "fn": "Lottery.enter",
      "offset": [
        747,
        781
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D2"
    },
    "976": {
      "fn": "Lottery.enter",
      "offset": [
        747,
        781
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "977": {
      "fn": "Lottery.enter",
      "offset": [
        747,
        781
      ],
      "op": "INVALID",
      "path": "3"
    },
    "978": {
      "fn": "Lottery.enter",
      "offset": [
        747,
        781
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "979": {
      "branch": 13,
      "fn": "Lottery.enter",
      "offset": [
        747,
        781
      ],
      "op": "EQ",
      "path": "3"
    },
    "980": {
      "fn": "Lottery.enter",
      "offset": [
        739,
        782
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DC"
    },
    "983": {
      "branch": 13,
      "fn": "Lottery.enter",
      "offset": [
        739,
        782
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "984": {
      "fn": "Lottery.enter",
      "offset": [
        739,
        782
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "986": {
      "fn": "Lottery.enter",
      "offset": [
        739,
        782
      ],
      "op": "DUP1",
      "path": "3"
    },
    "987": {
      "fn": "Lottery.enter",
      "offset": [
        739,
        782
      ],
      "op": "REVERT",
      "path": "3"
    },
    "988": {
      "fn": "Lottery.enter",
      "offset": [
        739,
        782
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "989": {
      "fn": "Lottery.enter",
      "offset": [
        813,
        829
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 6,
      "value": "0x3E4"
    },
    "992": {
      "fn": "Lottery.enter",
      "offset": [
        813,
        827
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AA"
    },
    "995": {
      "fn": "Lottery.enter",
      "jump": "i",
      "offset": [
        813,
        829
      ],
      "op": "JUMP",
      "path": "3"
    },
    "996": {
      "fn": "Lottery.enter",
      "offset": [
        813,
        829
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "997": {
      "fn": "Lottery.enter",
      "offset": [
        800,
        809
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "998": {
      "fn": "Lottery.enter",
      "offset": [
        800,
        829
      ],
      "op": "LT",
      "path": "3"
    },
    "999": {
      "branch": 14,
      "fn": "Lottery.enter",
      "offset": [
        800,
        829
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1000": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x42A"
    },
    "1003": {
      "branch": 14,
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1004": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1006": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1007": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1008": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1014": {
      "op": "SHL"
    },
    "1015": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1016": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1017": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1019": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1021": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1022": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "ADD",
      "path": "3"
    },
    "1023": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1024": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "1026": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1028": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1029": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "ADD",
      "path": "3"
    },
    "1030": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1031": {
      "op": "PUSH15",
      "value": "0x4E6F7420656E6F7567682045544821"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "1049": {
      "op": "SHL"
    },
    "1050": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "1052": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1053": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "ADD",
      "path": "3"
    },
    "1054": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1055": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1056": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1057": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1058": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1059": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1060": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "SUB",
      "path": "3"
    },
    "1061": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "1063": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "ADD",
      "path": "3"
    },
    "1064": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1065": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1066": {
      "fn": "Lottery.enter",
      "offset": [
        792,
        849
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1067": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        866
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 7,
      "value": "0x1"
    },
    "1069": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1070": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1071": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1072": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1073": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "ADD",
      "path": "3"
    },
    "1074": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1075": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1078": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1079": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1080": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1081": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1082": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "1115": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "ADD",
      "path": "3"
    },
    "1116": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1117": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1124": {
      "op": "SHL"
    },
    "1125": {
      "op": "SUB"
    },
    "1126": {
      "op": "NOT"
    },
    "1127": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "AND",
      "path": "3"
    },
    "1128": {
      "fn": "Lottery.enter",
      "offset": [
        872,
        882
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1129": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "OR",
      "path": "3"
    },
    "1130": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1131": {
      "fn": "Lottery.enter",
      "offset": [
        859,
        883
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1132": {
      "fn": "Lottery.enter",
      "jump": "o",
      "offset": [
        674,
        890
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1133": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1134": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x475"
    },
    "1137": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x581"
    },
    "1140": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1141": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1148": {
      "op": "SHL"
    },
    "1149": {
      "op": "SUB"
    },
    "1150": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "1151": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x486"
    },
    "1154": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A9"
    },
    "1157": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1158": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1165": {
      "op": "SHL"
    },
    "1166": {
      "op": "SUB"
    },
    "1167": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "1168": {
      "branch": 15,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "0"
    },
    "1169": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E1"
    },
    "1172": {
      "branch": 15,
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1173": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1175": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1176": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1177": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1183": {
      "op": "SHL"
    },
    "1184": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1185": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1186": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1188": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1190": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1191": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "1192": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1193": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1194": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1195": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1197": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1198": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "1199": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1200": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1233": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1235": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1236": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "1237": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1238": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1239": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1240": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1241": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1242": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1243": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SUB",
      "path": "0"
    },
    "1244": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1246": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "1247": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1248": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1249": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1256": {
      "op": "SHL"
    },
    "1257": {
      "op": "SUB"
    },
    "1258": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2099,
        2121
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 8
    },
    "1259": {
      "branch": 16,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2099,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "1260": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x526"
    },
    "1263": {
      "branch": 16,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1264": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1266": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1267": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1273": {
      "op": "SHL"
    },
    "1274": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1275": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1276": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1278": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "0"
    },
    "1279": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1280": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1281": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1283": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "0"
    },
    "1284": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1285": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1286": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SUB",
      "path": "0"
    },
    "1287": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1288": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1289": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "1291": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1292": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1293": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1295": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "0"
    },
    "1296": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1297": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x586"
    },
    "1300": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "1302": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1303": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "1304": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1306": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "0"
    },
    "1307": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1308": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "POP",
      "path": "0"
    },
    "1309": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "POP",
      "path": "0"
    },
    "1310": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1312": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1313": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1314": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1315": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SUB",
      "path": "0"
    },
    "1316": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1317": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1318": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1319": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x0"
    },
    "1321": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1322": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1323": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1325": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1332": {
      "op": "SHL"
    },
    "1333": {
      "op": "SUB"
    },
    "1334": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1335": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1336": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "AND",
      "path": "0"
    },
    "1337": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1338": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1339": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "AND",
      "path": "0"
    },
    "1340": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1341": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1374": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1375": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1376": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2233
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "1378": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1379": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1386": {
      "op": "SHL"
    },
    "1387": {
      "op": "SUB"
    },
    "1388": {
      "op": "NOT"
    },
    "1389": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "AND",
      "path": "0"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1396": {
      "op": "SHL"
    },
    "1397": {
      "op": "SUB"
    },
    "1398": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1399": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1400": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1401": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "AND",
      "path": "0"
    },
    "1402": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1403": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1404": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1405": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "OR",
      "path": "0"
    },
    "1406": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1407": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1408": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1409": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1410": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 11
    },
    "1411": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1412": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "2c0930683131f5f274fb7ef19ccda1406b8cdcaf",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.6;\n\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Lottery is Ownable {\n    address payable[] players;\n    uint256 public usdEntryFee;\n    AggregatorV3Interface internal ethUsdPriceFeed;\n    enum LOTTER_STATE {\n        OPEN,\n        CLOSED,\n        CALCULATING_WINNER\n    }\n\n    LOTTER_STATE public lottery_state;\n\n    constructor(address _priceFeedAddress) public {\n        usdEntryFee = 50 * (10**18);\n        ethUsdPriceFeed = AggregatorV3Interface(_priceFeedAddress);\n        lottery_state = LOTTER_STATE.CLOSED;\n    }\n\n    function enter() public payable {\n        // $50 minimum\n        require(lottery_state == LOTTER_STATE.OPEN);\n        require(msg.value >= getEntranceFee(), \"Not enough ETH!\");\n        players.push(msg.sender);\n    }\n\n    function getEntranceFee() public view returns (uint256) {\n        // get the price\n        (, int256 price, , , ) = ethUsdPriceFeed.latestRoundData();\n        uint256 adjustedPrice = uint256(price) * 10**10; // 18 decimals\n        uint256 costToEnter = (usdEntryFee * 10**18) / adjustedPrice;\n        return costToEnter;\n    }\n\n    function startLottery() public {\n        require(\n            lottery_state == LOTTER_STATE.CLOSED,\n            \"Can't start a new lotter yet\"\n        );\n        lottery_state = LOTTER_STATE.OPEN;\n    }\n\n    function endLottery() public {}\n}\n",
  "sourceMap": "188:1281:3:-:0;;;465:203;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;465:203:3;884:17:0;904:12;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:0;-1:-1:-1;;;;;926:18:0;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:0;959:43;;926:6;;959:43;-1:-1:-1;535:13:3;521:11;:27;558:15;:58;;-1:-1:-1;;;;;;558:58:3;-1:-1:-1;;;;;558:58:3;;;;;;-1:-1:-1;;558:15:3;-1:-1:-1;;;;626:35:3;-1:-1:-1;;;;626:35:3;;;;;465:203;188:1281;;598:104:1;685:10;598:104;:::o;188:1281:3:-;;;;;;;",
  "sourcePath": "contracts/Lottery.sol",
  "type": "contract"
}